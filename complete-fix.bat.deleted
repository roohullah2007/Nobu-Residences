@echo off
setlocal enabledelayedexpansion

echo =========================================================
echo     NOBU RESIDENCES - COMPLETE ERROR DIAGNOSTIC FIX
echo =========================================================
echo.

REM Check PHP availability
php --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå PHP is not installed or not in PATH
    echo Please install PHP and add it to your system PATH
    pause
    exit /b 1
)

echo ‚úÖ PHP is available
echo.

REM Check if we're in the right directory
if not exist "artisan" (
    echo ‚ùå This script must be run from the Laravel project root directory
    echo Current directory: %CD%
    echo Please navigate to the project folder and run this script again
    pause
    exit /b 1
)

echo ‚úÖ Found Laravel project
echo.

echo üîç DIAGNOSING ISSUES...
echo ==========================================

REM 1. Check database connection
echo üìä Checking database connection...
php -r "
try {
    require 'vendor/autoload.php';
    \$app = require 'bootstrap/app.php';
    \$app->make(\Illuminate\Contracts\Console\Kernel::class)->bootstrap();
    \Illuminate\Support\Facades\DB::connection()->getPdo();
    echo '‚úÖ Database connection: OK' . PHP_EOL;
} catch (Exception \$e) {
    echo '‚ùå Database connection failed: ' . \$e->getMessage() . PHP_EOL;
    echo '   Please check your .env database settings' . PHP_EOL;
}
"

REM 2. Check migrations
echo.
echo üóÑÔ∏è Checking database migrations...
php artisan migrate:status 2>nul
if errorlevel 1 (
    echo ‚ùå Migrations not run. Running migrations now...
    php artisan migrate --force
) else (
    echo ‚úÖ Database migrations: OK
)

REM 3. Run admin access fix
echo.
echo üë§ Checking admin access...
php fix-admin-access.php

REM 4. Check for missing React components
echo.
echo ‚öõÔ∏è Checking React components...

if exist "resources\js\Pages\PropertyDetail.jsx" (
    echo ‚úÖ PropertyDetail component exists
) else (
    echo ‚ùå PropertyDetail component missing
)

if exist "resources\js\Pages\Admin\Dashboard.jsx" (
    echo ‚úÖ Admin Dashboard component exists
) else (
    echo ‚ùå Admin Dashboard component missing
)

REM 5. Clear all caches
echo.
echo üßπ Clearing all caches...
php artisan config:clear
php artisan cache:clear
php artisan route:clear
php artisan view:clear
php artisan optimize:clear 2>nul

echo ‚úÖ Caches cleared

REM 6. Check if Node.js is available for asset building
echo.
echo üì¶ Checking Node.js and assets...
npm --version >nul 2>&1
if errorlevel 1 (
    echo ‚ö†Ô∏è Node.js not available - assets may need rebuilding
    echo   If you have issues, run: npm install && npm run build
) else (
    echo ‚úÖ Node.js is available
    echo üîß Checking if node_modules exists...
    if exist "node_modules" (
        echo ‚úÖ Node modules installed
    ) else (
        echo ‚ö†Ô∏è Node modules not installed. Installing...
        npm install
    )
)

REM 7. Check route registration
echo.
echo üõ£Ô∏è Checking routes...
php artisan route:list --compact 2>nul | findstr "admin/dashboard" >nul
if errorlevel 1 (
    echo ‚ùå Admin dashboard route not found
) else (
    echo ‚úÖ Admin dashboard route registered
)

php artisan route:list --compact 2>nul | findstr "property-detail" >nul
if errorlevel 1 (
    echo ‚ùå Property detail route not found
) else (
    echo ‚úÖ Property detail route registered
)

echo.
echo üéØ APPLYING FIXES...
echo ==========================================

REM Create a temporary route fix if needed
echo üîß Ensuring routes are properly configured...

REM Check if PropertyDetailSimple exists, if not mentioned in routes
php -r "
if (file_exists('resources/js/Pages/PropertyDetailSimple.jsx')) {
    echo '‚úÖ Fallback PropertyDetail component created' . PHP_EOL;
} else {
    echo '‚ö†Ô∏è Fallback component not found' . PHP_EOL;
}
"

echo.
echo ‚úÖ FIXES APPLIED!
echo ==========================================
echo.
echo üåê TEST THESE URLS:
echo ------------------
echo 1. Login page:          http://127.0.0.1:8000/login
echo 2. Admin Dashboard:     http://127.0.0.1:8000/admin/dashboard
echo 3. Property Detail:     http://127.0.0.1:8000/property-detail
echo 4. Home page:           http://127.0.0.1:8000/
echo.
echo üìã DEFAULT ADMIN CREDENTIALS (if created):
echo ------------------------------------------
echo Email:    admin@noburesidences.com
echo Password: admin123
echo.
echo üöÄ STARTING DEVELOPMENT SERVER...
echo ===============================
echo The server will start automatically...
echo Press Ctrl+C to stop the server when done testing
echo.

REM Start the Laravel development server
php artisan serve --host=127.0.0.1 --port=8000
