import React from 'react';

const ChevronLeft = ({ className }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 18L9 12L15 6" />
  </svg>
);

const ChevronRight = ({ className }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 18L15 12L9 6" />
  </svg>
);

const Heart = ({ className, filled = false }) => (
  <svg className={className} viewBox="0 0 24 24" fill={filled ? "currentColor" : "none"} stroke="currentColor">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={0.636364} d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" />
  </svg>
);

const Close = ({ className }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
  </svg>
);

const PhotoGalleryModal = ({ 
  showModal,
  modalImageIndex,
  propertyImages,
  propertyData,
  isFavorited,
  setIsFavorited,
  closeModal,
  prevModalImage,
  nextModalImage,
  setModalImageIndex
}) => {
  if (!showModal) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-95 z-50 flex flex-col">
      {/* Modal Header */}
      <div className="bg-black bg-opacity-90 px-4 py-3 flex justify-between items-center border-b border-white border-opacity-10 flex-shrink-0">
        <div className="text-white flex flex-col gap-1">
          <span className="font-semibold text-sm">{propertyData.address}</span>
          <span className="text-white text-opacity-70 text-xs">
            ({modalImageIndex + 1} of {propertyImages.length})
          </span>
        </div>
        <div className="flex items-center gap-2">
          <button 
            onClick={() => setIsFavorited(!isFavorited)}
            className="text-white bg-white bg-opacity-10 border border-white border-opacity-20 rounded-md p-2 w-10 h-10 flex items-center justify-center hover:bg-opacity-20 transition-colors"
          >
            <Heart className="w-5 h-5" filled={isFavorited} />
          </button>
          <button 
            onClick={closeModal}
            className="text-white bg-white bg-opacity-10 border border-white border-opacity-20 rounded-md p-2 w-10 h-10 flex items-center justify-center hover:bg-opacity-20 transition-colors"
          >
            <Close className="w-5 h-5" />
          </button>
        </div>
      </div>

      {/* Main Image Area */}
      <div className="flex-1 flex items-center justify-center relative overflow-hidden min-h-0">
        <button 
          onClick={prevModalImage}
          disabled={modalImageIndex === 0}
          className="absolute left-3 z-10 bg-white bg-opacity-90 border-none rounded-full w-10 h-10 flex items-center justify-center cursor-pointer top-1/2 transform -translate-y-1/2 hover:bg-white hover:scale-110 transition-all disabled:opacity-40 disabled:cursor-not-allowed"
        >
          <ChevronLeft className="w-5 h-5" />
        </button>
        
        <div className="w-full h-full flex items-center justify-center overflow-hidden px-16">
          <div 
            className="flex h-full w-full transition-transform duration-300 ease-in-out"
            style={{ transform: `translateX(-${modalImageIndex * 100}%)` }}
          >
            {propertyImages.map((image, index) => (
              <div key={index} className="min-w-full flex items-center justify-center p-4">
                <img 
                  src={image}
                  alt={`Property image ${index + 1}`}
                  className="max-w-full max-h-full object-contain"
                />
              </div>
            ))}
          </div>
        </div>
        
        <button 
          onClick={nextModalImage}
          disabled={modalImageIndex === propertyImages.length - 1}
          className="absolute right-3 z-10 bg-white bg-opacity-90 border-none rounded-full w-10 h-10 flex items-center justify-center cursor-pointer top-1/2 transform -translate-y-1/2 hover:bg-white hover:scale-110 transition-all disabled:opacity-40 disabled:cursor-not-allowed"
        >
          <ChevronRight className="w-5 h-5" />
        </button>
      </div>

      {/* Thumbnail Navigation */}
      <div className="flex gap-2 px-4 py-3 bg-black bg-opacity-90 border-t border-white border-opacity-10 overflow-x-auto">
        {propertyImages.map((image, index) => (
          <button
            key={index}
            onClick={() => setModalImageIndex(index)}
            className={`border-2 rounded-md overflow-hidden opacity-70 flex-shrink-0 transition-all hover:opacity-90 ${
              index === modalImageIndex 
                ? 'border-blue-500 opacity-100 scale-105' 
                : 'border-white border-opacity-20'
            }`}
          >
            <img 
              src={image}
              alt={`Thumbnail ${index + 1}`}
              className="w-20 h-15 object-cover block"
            />
          </button>
        ))}
      </div>
    </div>
  );
};

export default PhotoGalleryModal;