import React from 'react';

const Share = ({ className }) => (
  <svg className={className} fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
  </svg>
);

const Heart = ({ className, filled = false }) => (
  <svg className={className} viewBox="0 0 24 24" fill={filled ? "currentColor" : "none"} stroke="currentColor">
    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={0.636364} d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" />
  </svg>
);

const PropertyHeader = ({ 
  propertyData, 
  isFavorited, 
  setIsFavorited, 
  showShareDropdown, 
  setShowShareDropdown 
}) => {
  return (
    <div className="bg-white">
      <div className="max-w-[1280px] mx-auto px-5 py-8">
        <div className="flex flex-col-reverse md:flex-row justify-between items-start gap-5">
          {/* Property Info */}
          <div className="flex-1 pr-5">
            <h1 className="font-space-grotesk font-bold text-[40px] leading-[50px] text-[#293056] tracking-tight mb-3">
              {propertyData.address}
            </h1>
            <div className="font-work-sans font-medium text-lg leading-[27px] text-[#293056] tracking-tight underline">
              {propertyData.subtitle}
            </div>
          </div>
          
          {/* Actions Container */}
          <div className="flex items-center gap-3 flex-shrink-0">
            {/* Share Button */}
            <div className="relative">
              <button 
                onClick={() => setShowShareDropdown(!showShareDropdown)}
                className="flex justify-center items-center px-6 h-[33px] min-w-[95px] bg-white border border-[#717680] rounded-[10px] font-work-sans font-medium text-sm text-[#252B37] hover:bg-gray-50 transition-colors"
              >
                Share
              </button>
              
              {showShareDropdown && (
                <div className="absolute top-full right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg min-w-[200px] z-50">
                  <div className="py-1">
                    <button className="flex items-center gap-3 px-4 py-3 hover:bg-gray-50 w-full text-left text-sm">
                      <Share className="w-4 h-4" />
                      Facebook
                    </button>
                    <button className="flex items-center gap-3 px-4 py-3 hover:bg-gray-50 w-full text-left text-sm">
                      <Share className="w-4 h-4" />
                      Twitter
                    </button>
                    <button className="flex items-center gap-3 px-4 py-3 hover:bg-gray-50 w-full text-left text-sm">
                      <Share className="w-4 h-4" />
                      Copy Link
                    </button>
                  </div>
                </div>
              )}
            </div>
            
            {/* Favourite Button */}
            <button 
              onClick={() => setIsFavorited(!isFavorited)}
              className={`flex justify-center items-center gap-2 px-6 h-[33px] min-w-[99px] border rounded-[10px] font-work-sans font-medium text-sm transition-colors ${
                isFavorited 
                  ? 'bg-red-50 border-red-200 text-red-600' 
                  : 'bg-white border-[#717680] text-[#252B37] hover:bg-gray-50'
              }`}
            >
              <Heart className="w-[14px] h-4" filled={isFavorited} />
              {isFavorited ? 'Favorited' : 'Favourite'}
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PropertyHeader;